def render(kwargs):

    hda = kwargs['node']
    error_sop = hda.node('input_error')
    # Required, otherwise errors may fail to update on pressing render.
    try:
        error_sop.cook()
    except:
        pass
    
    if len(error_sop.errors()) == 0:
        rop = hda.node('rop_zibravdb_compress1')
        rop.parm('execute').pressButton()
        if len(rop.errors()) == 0:
            hda.parm('loadfromdisk').set(1)
            hda.parm('refresh').pressButton()
        else:
            hda.parm('loadfromdisk').set(0)
            
    else:
        hda.parm('loadfromdisk').set(0)
        print(error_sop.errors()[0])
    
    return


def backgroundRender(kwargs):

    hda = kwargs['node']
    error_sop = hda.node('input_error')
    # Required, otherwise errors may fail to update on pressing render.
    try:
        error_sop.cook()
    except:
        pass
    
    if len(error_sop.errors()) == 0:
        rop = hda.node('rop_zibravdb_compress1')
        rop.parm('executebackground').pressButton()
        if not hou.hipFile.hasUnsavedChanges():
            if len(rop.errors()) == 0:
                hda.parm('loadfromdisk').set(1)
                hda.parm('refresh').pressButton()
            else:
                hda.parm('loadfromdisk').set(0)
            
    else:
        hda.parm('loadfromdisk').set(0)
        print(error_sop.errors()[0])
    
    return
