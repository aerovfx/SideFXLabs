# Dialog script for labs::biome_region_assign::1.0 automatically generated

{
    name	labs::biome_region_assign::1.0
    script	labs::dryad_initialize::1.0
    label	"Labs Biome Region Assign"

    help {
	""
    }

    inputlabel	1	"Points with Biome Definitions"
    inputlabel	2	"Terrain Size Reference"
    parmtag { inputisref2 1 }
    inputlabel	3	"Terrain Size Reference"
    parmtag { inputisref3 1 }
    inputlabel	4	"Sub-Network Input #4"
    outputlabel	1	"Biome Regions"
    outputlabel	2	"Biome Regions"

    parm {
        name    "biomelib"
        label   "DELETE Biome Definitions File"
        type    file
        invisible
        default { "$HIP/data/biome/biomeprofile.json" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "outputmode"
        label   "Output"
        type    ordinal
        default { "1" }
        menu {
            "0" "Guide Geometry"
            "1" "Final HeightField Layers"
        }
        parmtag { "script_callback_language" "python" }
    }
    group {
        name    "fd_regions"
        label   "Biome Regions"

        parm {
            name    "src_depth"
            label   "Region Map Depth"
            type    ordinal
            default { "0" }
            menu {
                "0" "Single Layer"
                "1" "Multiple Layers"
            }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "src_single"
            label   "Regions From"
            type    ordinal
            default { "0" }
            hidewhen "{ src_depth != 0 }"
            menu {
                "0" "Image"
                "1" "Mesh (To Be Supported Soon)"
                "2" "HeightField Layers (To Be Supported Soon)"
            }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "src_multi"
            label   "Regions From"
            type    ordinal
            default { "1" }
            hidewhen "{ src_depth != 1 }"
            menu {
                "0" "PSD File (To Be Supported Soon)"
                "1" "Curves"
                "2" "HeightField Layers"
            }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "inputtype"
            label   "Input Type"
            type    integer
            invisible
            default { "0" }
            menu {
                "0" "Image"
                "1" "PSD File"
                "2" "Curves"
                "3" "HeightField Layers"
                "4" "Mesh with Attributes"
            }
            range   { 0 10 }
            parmtag { "script_callback" "" }
            parmtag { "script_callback_language" "python" }
        }
        groupsimple {
            name    "fd_img"
            label   "Image"
            grouptag { "sidefx::look" "blank" }

            groupsimple {
                name    "fd_img_extract"
                label   "Region Extraction from Image"
                hidewhen "{ src_depth != 0 } { src_single != 0 }"

                groupsimple {
                    name    "fd_img_src"
                    label   "fd_img_src"
                    hidewhen "{ src_depth != 0 } { src_single != 0 }"
                    grouptag { "sidefx::look" "blank" }

                    parm {
                        name    "imgsrc"
                        label   "Image Source"
                        type    ordinal
                        joinnext
                        default { "0" }
                        menu {
                            "0" "File"
                            "1" "COP Network"
                        }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "reloadimg"
                        label   "Reload Image"
                        type    button
                        nolabel
                        default { "0" }
                        hidewhen "{ imgsrc != 0 }"
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "imgfilepath"
                        label   "File Path"
                        type    image
                        default { "" }
                        hidewhen "{ imgsrc != 0 }"
                        parmtag { "autoscope" "0000000000000000" }
                        parmtag { "filechooser_mode" "read" }
                    }
                    parm {
                        name    "coppath"
                        label   "COP Network Path"
                        type    oppath
                        default { "" }
                        hidewhen "{ imgsrc != 1 }"
                        parmtag { "oprelative" "." }
                        parmtag { "script_callback_language" "python" }
                    }
                }

                parm {
                    name    "sampleresmode"
                    label   "Sample Resolution"
                    type    ordinal
                    default { "0" }
                    menu {
                        "0" "Source Image Resolution"
                        "1" "Specified Resolution"
                    }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "sampleres"
                    label   "Specified Resolution"
                    type    intvector2
                    size    2
                    default { "1024" "1024" }
                    hidewhen "{ sampleresmode != 1 }"
                    range   { -1 1 }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "samplecspace"
                    label   "Sample Color Space"
                    type    ordinal
                    default { "auto" }
                    hidewhen "{ imgsrc != 0 }"
                    menu {
                        "auto"      "Automatic"
                        "linear"    "Linear"
                    }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "clustercount"
                    label   "Color Clusters"
                    type    integer
                    default { "5" }
                    range   { 1! 100 }
                    parmtag { "autoscope" "0000000000000000" }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "clusteriter"
                    label   "Cluster Iterations"
                    type    integer
                    default { "10" }
                    range   { 1! 20 }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "refineclusters"
                    label   "Refine Region Borders"
                    type    toggle
                    default { "0" }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "refineiter"
                    label   "Refine Iterations"
                    type    integer
                    default { "1" }
                    hidewhen "{ refineclusters == 0 }"
                    range   { 0! 10 }
                    parmtag { "autoscope" "0000000000000000" }
                    parmtag { "script_callback_language" "python" }
                }
            }

            groupsimple {
                name    "fd_curve_merge"
                label   "Region Import from Curves"
                hidewhen "{ src_depth != 1 } { src_multi != 1 }"

                multiparm {
                    name    "numobj"
                    label    "Number of Curves"
                    default 1
                    parmtag { "autoscope" "0000000000000000" }

                    parm {
                        name    "enable#"
                        label   "Enable Merge #"
                        type    toggle
                        default { "1" }
                    }
                    parm {
                        name    "objpath#"
                        label   "Object #"
                        type    oppath
                        default { "" }
                        parmtag { "opfilter" "!!SOP!!" }
                        parmtag { "oprelative" "." }
                    }
                    parm {
                        name    "group#"
                        label   "Group #"
                        type    string
                        invisible
                        default { "" }
                    }
                    parm {
                        name    "expand#"
                        label   "Expand Group #"
                        type    toggle
                        invisible
                        default { "0" }
                    }
                }

                parm {
                    name    "sepparm3"
                    label   "Separator"
                    type    separator
                    default { "" }
                }
                parm {
                    name    "curvegrouping"
                    label   "Generate Region Per"
                    type    ordinal
                    default { "0" }
                    menu {
                        "0" "Connected Curve"
                        "1" "Multiparm Entry"
                        "2" "Unique Curve Primitive ID"
                    }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "curveidattrib"
                    label   "Curve ID Attribute"
                    type    string
                    default { "curve_id" }
                    hidewhen "{ curvegrouping != 2 }"
                    parmtag { "script_callback_language" "python" }
                }
            }

            parm {
                name    "sepparm4"
                label   "Spacer"
                type    separator
                default { "" }
                parmtag { "sidefx::layout_height" "small" }
                parmtag { "sidefx::look" "blank" }
            }
            groupsimple {
                name    "fd_img_assign"
                label   "Region Assignment"
                hidewhen "{ src_depth == 0 src_single != 0 } { src_depth == 1 src_multi != 1 }"

                parm {
                    name    "sepparm"
                    label   "Spacer"
                    type    separator
                    default { "" }
                    parmtag { "sidefx::layout_height" "small" }
                    parmtag { "sidefx::look" "blank" }
                }
                parm {
                    name    "generatecolors"
                    label   "Recreate Region List"
                    type    button
                    default { "0" }
                    parmtag { "script_callback" "hou.phm().buildRegionMultiparmFromImage(kwargs)" }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "sepparm2"
                    label   "Separator"
                    type    separator
                    default { "" }
                }
                multiparm {
                    name    "mp_img_regions"
                    label    "Number of Regions"
                    parmtag { "script_callback" "hou.phm().forceUpdate(kwargs)" }

                    parm {
                        name    "img_bname#"
                        label   "Biome Name"
                        type    string
                        default { "" }
                        menu {
                            [ "hou.phm().biomeMenuSafe(kwargs)" ]
                            language python
                        }
                        parmtag { "script_callback" "hou.phm().forceUpdate(kwargs)" }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "img_bhierarchy#"
                        label   "Biome Hierarchy"
                        type    integer
                        default { "0" }
                        range   { 0! 20 }
                        parmtag { "script_callback" "hou.phm().forceUpdate(kwargs)" }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "img_bcolor#"
                        label   "Visualization Color"
                        type    color
                        size    3
                        default { "1" "1" "1" }
                        range   { 0 1 }
                        parmtag { "colortype" "val" }
                        parmtag { "script_callback" "hou.phm().forceUpdate(kwargs)" }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "sepparm03_#"
                        label   "Separator"
                        type    separator
                        default { "" }
                    }
                }

            }

        }

        groupsimple {
            name    "fd_hf_assign"
            label   "Region Assignment"
            hidewhen "{ src_depth == 0 } { src_depth == 1 src_multi != 2 }"
            grouptag { "sidefx::switcher" "fd_img_assign" }

            parm {
                name    "sepparm5"
                label   "Spacer"
                type    separator
                default { "" }
                hidewhen "{ src_depth == 0 src_single != 2 } { src_depth == 1 src_multi != 2 }"
                parmtag { "sidefx::layout_height" "small" }
                parmtag { "sidefx::look" "blank" }
            }
            parm {
                name    "hf_generatecolors"
                label   "Recreate Region List"
                type    button
                default { "0" }
                hidewhen "{ src_depth == 0 src_single != 2 } { src_depth == 1 src_multi != 2 }"
                parmtag { "script_callback" "hou.phm().buildRegionMultiparmFromhHeightfields(kwargs)" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "sepparm6"
                label   "Separator"
                type    separator
                default { "" }
                hidewhen "{ src_depth == 0 src_single != 2 } { src_depth == 1 src_multi != 2 }"
            }
            multiparm {
                name    "hf_img_regions"
                label    "Number of Regions"
                hidewhen "{ src_depth == 0 src_single != 2 } { src_depth == 1 src_multi != 2 }"
                parmtag { "multistartoffset" "1" }
                parmtag { "script_callback" "hou.phm().forceUpdateHeightfield(kwargs)" }

                parm {
                    name    "hflayername#"
                    label   "Layer"
                    type    string
                    default { "" }
                    hidewhen "{ src_depth == 0 src_single != 2 } { src_depth == 1 src_multi != 2 }"
                    menureplace {
                        [ "import terraintoolutils" ]
                        [ "" ]
                        [ "return terraintoolutils.buildNameMenu(kwargs['node'].node(\"INPUT_TERRAIN_SIZE_REF\"))" ]
                        language python
                    }
                    parmtag { "script_callback" "hou.phm().forceUpdateHeightfield(kwargs)" }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "hf_bname#"
                    label   "Biome Name"
                    type    string
                    default { "" }
                    hidewhen "{ src_depth == 0 src_single != 2 } { src_depth == 1 src_multi != 2 }"
                    menu {
                        [ "hou.phm().biomeMenuSafe(kwargs)" ]
                        language python
                    }
                    parmtag { "script_callback" "hou.phm().forceUpdateHeightfield(kwargs)" }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "hf_bhierarchy#"
                    label   "Biome Hierarchy"
                    type    integer
                    default { "0" }
                    hidewhen "{ src_depth == 0 src_single != 2 } { src_depth == 1 src_multi != 2 }"
                    range   { 0! 20 }
                    parmtag { "script_callback" "hou.phm().forceUpdateHeightfield(kwargs)" }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "sepparm03_#_2"
                    label   "Separator"
                    type    separator
                    default { "" }
                    hidewhen "{ src_depth == 0 src_single != 2 } { src_depth == 1 src_multi != 2 }"
                }
            }

        }

        groupsimple {
            name    "fd_mesh"
            label   "Mesh with Attributes"
            hidewhen "{ inputtype != 4 }"
            grouptag { "sidefx::look" "blank" }

            parm {
                name    "attrname"
                label   "Attribute Name"
                type    string
                default { "" }
                menureplace {
                    [ "r = []" ]
                    [ "node = kwargs['node']" ]
                    [ "inputs = node.inputs()" ]
                    [ "" ]
                    [ "if inputs and inputs[0]:" ]
                    [ "" ]
                    [ "    geo = inputs[0].geometry()" ]
                    [ "    " ]
                    [ "    if geo:" ]
                    [ "    " ]
                    [ "        attrs = geo.primAttribs()" ]
                    [ "       " ]
                    [ "        for a in attrs:" ]
                    [ "            if not a.isArrayType() and a.size() == 1:" ]
                    [ "                r.extend([a.name(), a.name()])" ]
                    [ "                " ]
                    [ "return r" ]
                    language python
                }
                parmtag { "script_callback" "hou.phm().refreshValues(kwargs['node'])" }
                parmtag { "script_callback_language" "python" }
            }
            groupsimple {
                name    "fd_biomeassignmentmesh2"
                label   "Biome Assignment"

                multiparm {
                    name    "fd_attribute"
                    label    "Attribute Settings"

                    parm {
                        name    "attrvalue#"
                        label   "Attribute Value"
                        type    string
                        default { "" }
                        menureplace {
                            [ "#This script gets stored Attribute Name values and populates menu dropdown with choices" ]
                            [ "" ]
                            [ "node = kwargs['node']" ]
                            [ "inputs = node.inputs()" ]
                            [ "uniqueVals = []" ]
                            [ "uniqueValsFormatted = []" ]
                            [ "" ]
                            [ "if inputs and inputs[1]:" ]
                            [ "    uniqueVals = node.parm(\"attribvalcontainer\").eval()" ]
                            [ "    " ]
                            [ "    #Formatting list from the stored string value into correct data type, so we eliminate unecessary characters" ]
                            [ "    uniqueVals = list(uniqueVals.split(\",\"))" ]
                            [ "    #Menu items only show every other entry, so we populate the array twice " ]
                            [ "    for u in uniqueVals:" ]
                            [ "        uniqueValsFormatted.extend([u, u])" ]
                            [ "" ]
                            [ "        " ]
                            [ "return uniqueValsFormatted" ]
                            [ "                " ]
                            language python
                        }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "biomename_meshattr#"
                        label   "Biome Name"
                        type    string
                        default { "" }
                        menu {
                            [ "hou.phm().biomeMenuSafe(kwargs)" ]
                            language python
                        }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "biomehierarchy_mesh#"
                        label   "Biome Hierarchy"
                        type    integer
                        default { "1" }
                        range   { 1! 20 }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "vizcol_mesh#"
                        label   "Visualization Color"
                        type    color
                        size    3
                        default { "1" "1" "1" }
                        range   { 0 1 }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "sepparm2_#_5"
                        label   "Separator"
                        type    separator
                        default { "" }
                    }
                }

                parm {
                    name    "loadvalues"
                    label   "Load Values"
                    type    button
                    default { "0" }
                    parmtag { "script_callback" "hou.phm().loadValues(kwargs['node'])" }
                    parmtag { "script_callback_language" "python" }
                }
                parm {
                    name    "refreshvalues"
                    label   "Refresh Values"
                    type    button
                    default { "0" }
                    parmtag { "script_callback" "hou.phm().refreshValues(kwargs['node'])" }
                    parmtag { "script_callback_language" "python" }
                }
            }

            parm {
                name    "attribvalcontainer"
                label   "Attribute Value Container"
                type    string
                default { "" }
                parmtag { "editor" "0" }
                parmtag { "script_callback_language" "python" }
            }
        }

        groupsimple {
            name    "fd_psd"
            label   "PSD File"
            hidewhen "{ inputtype != 1 }"
            grouptag { "sidefx::look" "blank" }

            parm {
                name    "file"
                label   "File"
                type    image
                default { "" }
                parmtag { "filechooser_pattern" "*.psd" }
            }
            parm {
                name    "reload"
                label   "Reload PSD"
                type    button
                default { "0" }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback" "kwargs['node'].node(psd_input).parm('reload').pressButton()" }
            }
            parm {
                name    "psdmatchsize"
                label   "Match Size to Terrain"
                type    toggle
                default { "1" }
                parmtag { "script_callback_language" "python" }
            }
            groupsimple {
                name    "fd_biomeassignpsd2"
                label   "Biome Assignment"

                multiparm {
                    name    "fd_layerattrib"
                    label    "Layers To Extract"
                    default 0
                    parmtag { "autoscope" "0000000000000000" }

                    parm {
                        name    "layer_name#"
                        label   "Layer Name"
                        type    string
                        default { "" }
                        menureplace {
                            [ "import hou" ]
                            [ "" ]
                            [ "try:" ]
                            [ "    AllModuleNames = set(kwargs['node'].node('psd_input/cop2net/remove_default_planes').planes())" ]
                            [ "    ModulePairs = [[x, x] for x in AllModuleNames]" ]
                            [ "    return sum(ModulePairs, [])" ]
                            [ "except:" ]
                            [ "    return ['', '']" ]
                            language python
                        }
                    }
                    parm {
                        name    "biomename_psd#"
                        label   "Biome Name"
                        type    string
                        default { "" }
                        menu {
                            [ "hou.phm().biomeMenuSafe(kwargs)" ]
                            language python
                        }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "biomehierarchy_psd#"
                        label   "Biome Hierarchy"
                        type    integer
                        default { "1" }
                        range   { 1! 20 }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "thresh#"
                        label   "Brightness Threshold"
                        type    float
                        default { "0.01" }
                        range   { 0 1 }
                        parmtag { "autoscope" "0000000000000000" }
                    }
                    parm {
                        name    "viscol_psd#"
                        label   "Visualization Color"
                        type    color
                        size    3
                        default { "1" "1" "1" }
                        range   { 0 1 }
                        parmtag { "script_callback_language" "python" }
                    }
                    groupcollapsible {
                        name    "fd_advanced_#_3"
                        label   "Advanced"
                        grouptag { "group_type" "collapsible" }

                        parm {
                            name    "step#"
                            label   "Resample Step"
                            type    float
                            default { "10" }
                            range   { 0.001! 10 }
                            parmtag { "autoscope" "0000000000000000" }
                        }
                        parm {
                            name    "inlinepointremoval#"
                            label   "Inline Point Threshold"
                            type    float
                            default { "1" }
                            range   { 0 2 }
                        }
                        parm {
                            name    "shrink_uvs#"
                            label   "Shrink UVs"
                            type    float
                            default { "0.005" }
                            range   { -1 1 }
                            parmtag { "autoscope" "0000000000000000" }
                        }
                        parm {
                            name    "shapeexpand#"
                            label   "Label"
                            type    toggle
                            nolabel
                            joinnext
                            default { "0" }
                        }
                        parm {
                            name    "op#"
                            label   "Shape"
                            type    ordinal
                            default { "expand" }
                            disablewhen "{ shapeexpand# == 0 }"
                            menu {
                                "expand"    "Expand"
                                "shrink"    "Shrink"
                            }
                            parmtag { "autoscope" "0000000000000000" }
                        }
                        parm {
                            name    "size_psd#"
                            label   "Size"
                            type    float
                            default { "0" }
                            hidewhen "{ shapeexpand# == 0 }"
                            range   { 0! 10 }
                            parmtag { "autoscope" "0000000000000000" }
                        }
                    }

                    parm {
                        name    "sepparm2_#_3"
                        label   "Separator"
                        type    separator
                        default { "" }
                    }
                }

            }

        }

        groupsimple {
            name    "fd_curves"
            label   "Curves"
            hidewhen "{ inputtype != 2 }"
            grouptag { "sidefx::look" "blank" }

            parm {
                name    "createcurvehda"
                label   "Create Curve Setup HDA"
                type    button
                default { "0" }
                parmtag { "script_callback" "hou.phm().createCurveNode(hou.pwd())" }
                parmtag { "script_callback_language" "python" }
            }
            groupsimple {
                name    "fd_curveviz"
                label   "Biome Visualization"

                parm {
                    name    "curveregion"
                    label   "Load Biomes"
                    type    button
                    default { "0" }
                    parmtag { "script_callback" "hou.phm().generateCurveBiomes(kwargs['node'])" }
                    parmtag { "script_callback_language" "python" }
                }
                multiparm {
                    name    "fd_curvebiomeviz"
                    label    "Number of Biomes"

                    parm {
                        name    "biomename_curve#"
                        label   "Biome Name"
                        type    string
                        default { "" }
                        menu {
                            [ "hou.phm().biomeMenuSafe(kwargs)" ]
                            language python
                        }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "curvevizcol#"
                        label   "Visualization Color"
                        type    color
                        size    3
                        default { "1" "1" "1" }
                        range   { 0 1 }
                        parmtag { "script_callback_language" "python" }
                    }
                    parm {
                        name    "sepparm9_#"
                        label   "Separator"
                        type    separator
                        default { "" }
                    }
                }

            }

        }

        groupsimple {
            name    "fd_hf"
            label   "Houdini HeightField Layers"
            hidewhen "{ inputtype != 3 }"
            grouptag { "sidefx::look" "blank" }

            parm {
                name    "layerhierarchy"
                label   "Layer Hierarchy Type"
                type    ordinal
                default { "0" }
                menu {
                    "0" "Dominant Layer Value"
                    "1" "Manual Hierarchy Value"
                }
                parmtag { "script_callback_language" "python" }
            }
            groupsimple {
                name    "fd_biomeclass2"
                label   "Biome Classification"
                grouptag { "sidefx::look" "blank" }

                groupsimple {
                    name    "fd_biomeassignmenthf2"
                    label   "Biome Assignment"

                    multiparm {
                        name    "fd_layers"
                        label    "Layers"

                        parm {
                            name    "layername#"
                            label   "Layer"
                            type    string
                            default { "" }
                            menureplace {
                                [ "import terraintoolutils" ]
                                [ "" ]
                                [ "return terraintoolutils.buildNameMenu(kwargs['node'].node(\"IN_BIOME\"))" ]
                                language python
                            }
                            parmtag { "script_callback_language" "python" }
                        }
                        parm {
                            name    "biomename_hf_#"
                            label   "Biome Name"
                            type    string
                            default { "" }
                            menu {
                                [ "hou.phm().biomeMenuSafe(kwargs)" ]
                                language python
                            }
                            parmtag { "script_callback_language" "python" }
                        }
                        parm {
                            name    "biomehierarchy_hf#"
                            label   "Biome Hierarchy"
                            type    integer
                            default { "1" }
                            hidewhen "{ layerhierarchy != 1 }"
                            range   { 1! 20 }
                            parmtag { "script_callback_language" "python" }
                        }
                        parm {
                            name    "vizcol_hf#"
                            label   "Visualization Color"
                            type    color
                            size    3
                            default { "1" "1" "1" }
                            range   { 0 1 }
                            parmtag { "script_callback_language" "python" }
                        }
                        parm {
                            name    "sepparm2_#_4"
                            label   "Separator"
                            type    separator
                            default { "" }
                        }
                    }

                }

            }

        }

    }

    group {
        name    "fd_regions_1"
        label   "Output HeightFields"

        parm {
            name    "divisionmode"
            label   "Division Mode"
            type    ordinal
            default { "size" }
            menu {
                "maxaxis"   "By Axis"
                "size"      "By Size"
            }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "gridsamples"
            label   "Grid Samples"
            type    integer
            default { "512" }
            hidewhen "{ divisionmode != maxaxis }"
            range   { 1! 2048 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "gridspacing"
            label   "Grid Spacing"
            type    float
            default { "2" }
            hidewhen "{ divisionmode != size }"
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "outputsize"
            label   "Size"
            type    vector2
            size    2
            default { "1000" "1000" }
            disablewhen "{ hasinput(1) == 1 }"
            range   { -1 1 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "resolveoverlaps"
            label   "Resolve Region Overlaps"
            type    toggle
            default { "0" }
            hidewhen "{ src_depth != 1 }"
            parmtag { "script_callback_language" "python" }
        }
    }

}
