#type:     node
#context:  sop
#internal: labs::biome_plant_scatter::1.0
#icon:     SOP/labs::biome_plant_scatter::1.0

= Labs Biome Plant Scatter (Alpha) =

"""Scatters plant species points across the surface of an input heightfield by matching input plant types with their preferred environmental conditions."""

This node scatters plant species points defined by multiple _Labs Biome Plant Define SOPs_ chained together or a _Labs Biome Plant Definitions File SOP_ that is set to create geometry from a plant definitions file. These points contain attributes denoting their ideal conditions and tolerance level for factors including temperature and precipitation. The second input is a heightfield with biome attributes including temperature and precipitation, and other environmental attributes such as soil. This second input expects a heightfield generated by a _Labs Biome Attributes to Terrain SOP_ followed by a recommended _Labs Biome Attributes Evolve SOP_. This node inserts the plant and heightfield attributes into a viability function to determine the viability of a species in an area. The function produces a species viability heightfield layer per plant species and these layers control the scatter density of the plant species. After an initial plant scatter, plant species in close proximity to one another compete for resources, and the strongest survive while the weaker species are culled. The third input expects a heightfield mask or geometry to build a mask from. This mask is subtracted from the soil mask and will exclude the scatter from those areas. The first output is a point cloud source for instancing and the second output is the heightfield that can optionally include all of the plant viability layers when __Output Plant Viability Layers__ is enabled.  

@parameters

    Mode:
        #id: mode
        Controls if terrain points are scattered on the input terrain or a test terrain, or alternatively, if a simple line-up of the plant inventory is displayed. Scattering on test terrain or displaying the plant inventory modes are used for experimenting with plant species and biomes before a terrain environment has been defined. Scattering on input terrain requires an input terrain while the other modes do not. 
        <p>__Scatter on Input Terrain__: This mode scatters points onto the surface of the input heightfield based on the input heightfield layers: Temperature, Precipitation, and Soil.</p>            
        <p>__Scatter on Test Terrain__: This mode generates a test terrain with specified or existing biome attributes. Heightfield layers for Temperature and Precipitation are generated based on the Test Terrain parameters and Soil is filled with a value of 1. </p>            
        <p>__Display Plant Inventory__: This mode produces a line-up of each plant specie's mesh variants alongside their corresponding dead mesh variants.</p>
            
    Spacing:
        #id: spacing
        The distance between plant species.

    == Test Terrain ==

    Size:
        #id: size
        Width and height of the test terrain heightfield, in meters. 
    Biome Attributes:
        #id: biomeattributes
        Method for defining the test terrain biome attributes.
        <p>__Specified__: Biome attributes are manually set with __Temperature__ and __Precipitation__ parameters.</p>   
        <p>__From Existing Biome__: Biome attributes are read from an existing biome.</p> 
            
    Path to Biomes:
        #id: pathtobiomes
        Node path to the last _Labs Biome Define SOP_ in a chain of nodes or a _Biome Definitions File SOP_ set to create geometry from a biome definitions file. A list of biomes defined by this path will populate the __Biome__ ordered menu. 
    Biome:
        #id: biome
        The biome to read biome attributes from and apply to test terrain. 
    Temperature:
        #id: temperature
        Test terrain is filled with this temperature value. 
    Precipitation:
        #id: precipitation
        Test terrain is filled with this precipitation value.
    Temperature:
        #id: temperaturemanual
        Test terrain is filled with this temperature value.
    Precipitation:
        #id: precipitationmanual
        Test terrain is filled with this precipitation value.

    == Scatter ==

    === Post-processing ===

    Scale Multiplier:
        #id: scalemult
        Factor by which all plant species are scaled. 
    Density Multiplier:
        #id: densitymultiplier
        Factor by which the density of all plant species is scaled. 
    Age Jitter:
        #id: agejitter
        Scale of the offset to slightly alter the plant ages. Ages are jittered by a value of -0.5 to 0.5 times this scale. Jittering the age will introduce chaos and break up the artificial smooth profile of a forest. Age is then clamped between 0 and 1. 
    Random Seed:
        #id: seed
        The random number seed used to scatter points. 
    Tree Overlap Allowance:
        #id: treeoverlapallowance
        The distance in meters that trees are allowed to overlap each other. If the overlap distance of two tree bounds radii is greater than this value, they are considered intersecting and one of the trees is removed from the scatter. 
    Shrub Overlap Allowance:
        #id: shruboverlapallowance
        The distance in meters that shrubs are allowed to overlap each other. If the overlap distance of two shrub bounds radii is greater than this value, they are considered intersecting and one of the shrubs is removed from the scatter. 
    Keep Plants by:
        #id: keepplantsby
        Method used to determine which intersecting plant is kept and which is culled.        
        <p>__Greatest Age__: Method for keeping points with the greatest age.</p>
	<p>__Greatest Viability__: Method for keeping points with the greatest viability.</p>
        <p>__Random__: Method for keeping points randomly.</p>

    === Culling ===

    Enable Culling:
        #id: enableculling
        Enables post-processing culling.
    Cull Type:
        #id: culltype
        Method for culling.
        <p>__Percentage to Keep__: Method for culling by percentage.</p>   
        <p>__Maximum Number__: Method for culling by maximum number.</p> 
            
    Maximum Number:
        #id: maxnum
        Points exceeding this number are culled.
    Percentage to Keep:
        #id: percentagetokeep
        Percentage of points that are not culled.
    Enable Mask:
        #id: enablemask
        Enables the masking of points by the third input. A heightfield mask and/or geometry will be subtracted from the soil mask to prevent plants from scattering in the masked area. 
    Invert Mask:
        #id: invertmask  
	Enable to invert the mask of input 3. If enabled, the red areas of the input mask will be subtracted from the scatter. 

    === Incomplete Age Coverage ===

    Replace With:
        #id: replacewith2
        Geometry to reference if the current plant point's age is not covered by the plant specie's __Normalized Age Range__ parameters defined by the _Biome Plant Define SOP_. Preview results with an _Instance SOP_.  
        <p>__No Geometry__: Plant points are removed from the scatter.</p>     
        <p>__Debug Spheres__: The point's instance attribute, __Mesh Path__, references a colored sphere. This geometry is useful for debugging.</p>     
        <p>__Closest Age Mesh Variant__: The point's instance attribute, __Mesh Path__, references the mesh variant with the closest age range to the current plant point's age.</p> 
            
    Debug Sphere Color:
        #id: debugspherecol2
        A color value that is easily distinguishable from the color of plant mesh variants. 
    Debug Sphere Scale:
        #id: debugspherescale2
        The scale of the __Incomplete Age Coverage__ debug sphere. 

    === Invalid Mesh Path ===

    Replace With:
        #id: replacewith
        Geometry to reference if the current plant point's __Mesh Variant__ is missing or invalid. Preview results with an _Instance SOP_.  
        <p>__No Geometry__: Plant points are removed from the scatter.</p>     
        <p>__Debug Spheres__: The point's instance attribute, __Mesh Path__, references a colored sphere. This geometry is useful for debugging.</p>     
            
    Debug Sphere Color:
        #id: debugspherecol
        A color value that is easily distinguishable from the color of plant mesh variants.
    Debug Sphere Scale:
        #id: debugspherescale
        The scale of the __Invalid Mesh Path__ debug sphere.

    == Input ==

    === HeightField Layers ===

    Temperature:
        #id: tempname
        The name of the temperature heightfield layer.
    Precipitation:
        #id: precname
        The name of the precipitation heightfield layer.
    Soil:
        #id: soilname
        The name of the soil heightfield layer.

    == Output ==

    === Detail Attributes ===

    meshvariantsdetailarray:
        #id: meshvariantsdetailarray
        Output the __Mesh Variants__ detail string array.
    Mesh Variants:
        #id: meshvariantsname
        Name of the Mesh Variants detail string array. A list of unique strings that are the instance references. These references should point to files on disk or op: operator references. Only the mesh variants present in the scatter are included in the Mesh Variants array.  
    ueassetdetailarray:
        #id: ueassetdetailarray
        Output the __Unreal Asset Paths__ detail string array. 
    Unreal Asset Paths:
        #id: ueassetpathsname
        Name of the Unreal Asset Paths detail string array. A list of unique strings that are the unreal instance paths. These references should point to the asset's reference.  

    === Point Attributes ===

    Mesh Path:
        #id: meshpathname
        Name of the mesh path point attribute, also known as the instance attribute. 
    outputunrealpath:
        #id: outputunrealpath
        Output the __Unreal Asset Path__ point attribute.
    Unreal Asset Path:
        #id: unrealassetpath
        Name of the Unreal Asset Path point attribute. 
    outputage:
        #id: outputage
        Output the __Age__ point attribute. 
    Age :
        #id: agename
        Name of the Age point attribute. 
    outputviability:
        #id: outputviability
        Output the __Viability__ point attribute. 
    Viability:
        #id: viabilityname
        Name of the Viability point attribute. 
    Enable Mesh ID:
        #id: enablemeshid
        Output the __Mesh ID__ integer piece attribute. 
    Mesh ID:
        #id: meshidname
        Name of the Mesh ID integer piece attribute. This attribute is the enumeration of the __Mesh Path__ attribute.
    Enable Unreal Mesh ID:
        #id: enableuemeshid
        Output the __Unreal Mesh ID__ integer piece attribute. This attribute is needed for the _PCG Export SOP_.
    Unreal Mesh ID:
        #id: uemeshidname
        Name of the Unreal Mesh ID integer piece attribute. This attribute is the enumeration of the __Unreal Asset Path__ attribute.

    === Point Groups ===

    Plant Points Group:
        #id: outputplantpointsgroup
        Output __Plant Points__ group.
    Plant Points:
        #id: plantpointsname
        Name of Plant Points group. This is a group of all the points of the first output. 

    === HeightField Layers ===

    Output Plant Viability Layers:
        #id: outputplantviabilitylayers
        Output a plant viability heightfield layer per plant species with the second output. 
    Prefix:
        #id: prefixname
        String added at the beginning of each plant viability heightfield layer name. Name = Prefix + Species ID Name.

    == Visualize ==

    === Points ===

    Visualize Points:
        #id: vizpoints
        Visualizes the points colored by their attributes. 
    Color By:
        #id: colorby
        Attribute to color the points by. 
        <p>__Plant Species__: Color by the Species ID Color defined by the _Biome Plant Define SOP_ or assign random colors from the Species ID Name attribute when __Assign Random Colors__ is enabled.</p>     
        <p>__Viability__: Color by the Viability attribute. </p>    
        <p>__Age__: Color by the Age attribute. </p> 
            
    Assign Random Colors:
        #id: assignrandomcolors
        Assign random colors from the Species ID Name.
    Seed:
        #id: seed2
        Seed for the random colors.
    Normalized Color Ramp:
        #id: ramp
        Control how colors map to attribute values. Colors on the left correspond to lower attribute values while colors on the right correspond to higher attribute values. 

    === HeightField Layers ===

    Visualize Terrain:
        #id: vizterrain
        Visualizes the terrain. Note: If __Mode__ is set to __Display Plant Inventory__ there is no terrain to display. 
    Visualize Species Viability:
        #id: vizspeciesviability
        Visualizes a Species Viability heightfield layer as a red mask. The more red, the more likely the plant species will be scattered in that area. Navigate to the __Output__ tab and enable __Output Plant Viability Layers__ to output these heightfield layers to the second output. 
    Species:
        #id: species
        The current plant species to visualize.
@locals
    
    
@related
- [Labs Biome Plant Define|Node:sop/labs--biome_plant_define-1.0]

