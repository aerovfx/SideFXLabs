#type:     node
#context:  sop
#internal: labs::rop_zibravdb_compress::0.2
#icon:     /labs_icons/zibravdb.svg
#since:    20.5

= Labs ZibraVDB Compress (Alpha) =

"""Compresses a VDB sequence and caches it to disk as a single  `.zibravdb` file."""


As a part of the [ZibraVDB for Houdini|https://effects.zibra.ai/zibravdbhoudini] plugin, this node caches a VDB sequence to disk as a single, highly compressed `.zibravdb` file. It supports both animated VDB sequences and static VDB geometries.

The compression often achieves up to 97â€“99% reduction in VDB file size with minimal quality loss. The compression rate is adjustable for each VDB field, providing independent control over the quality and memory footprint of density, temperature, flame, and other standard or custom fields. Up to 8 float fields can be compressed simultaneously.

TIP:
    You may also compress SDF VDBs indirectly. Convert SDF VDBs to Fog VDBs before compression and back to SDF VDBs after decompression using the [Convert VDB SOP|Node:/sop/convertvdb].

NOTE:
    Vector VDBs currently cannot be compressed. This feature will be supported in the future. In the meantime, you can split vector VDBs to float VDBs using the [VDB Vector Split SOP|Node:/sop/vdbvectorsplit] before compression. After decompression, merge the float VDBs back to vector VDBs using [VDB Vector from Scalar|Node:/sop/vdbvectormerge]. Please note that compressing vectors is not exactly the same as compressing vector components independently, so this current workaround may yield unexpected results.

:platform:Windows
    ZibraVDB for Houdini is currently only supported on Windows.


:include /nodes/out/labs--zibravdb_compress-0.2#gettingready:


:include /nodes/out/labs--zibravdb_compress-0.2#aboutzibravdb:


:include /nodes/out/labs--zibravdb_compress-0.2#feedback:


@parameters

    Render to Disk:
        #id: execute
        Compresses VDB sequence to `.zibravdb` file and saves it to disk. 

    Background Render:
        #id: executebackground
        Compresses VDB sequence to `.zibravdb` file and saves it to disk in background. 

    Controls...:
        #id: renderdialog
        Opens the control dialog to allow adjustments of the render parameters before rendering.

    Valid Frame Range:
        #id: trange
        Specifies whether to compress VDB in the frame range or a single frame.
    
    Start/End/Inc:
        #id: f
        Specifies the range of frames to render (start frame, end frame, and increment). All values may be floating point values. The range is inclusive.
    
    Render with Take:
        #id: take
        Uses the settings in a particular take while rendering. Choose Current to use the current take when rendering.
    
    Out File:
        #id: filename
        Path to the `.zibravdb` file VDB sequence will be compessed to. The node automatically creates missing directories in the path.

    Quality:
        #id: quality
        Specifies quality of the compressed effect. The lower quality is the higher compression rate will be.

    Use Per Channel Settings:
        #id: useperchsettings
        Allows to specify different compression quality for each channel.

    Number of Channels:
        #id: perch_settings
        Allows to specify number of overrides for compression quality per channel. Not specified channels will use value from __Quality__ parameter.

    Channel Name:
        #id: perchname#
        Name of the channel that will have custom compression settings.

    Channel Quality:
        #id: perchquality#
        Specifies compression Quality for the specific channel. 

    Pre-Render Script:
        #id: prerender
        Run this script before any rendering.

    Pre-Frame Script:
        #id: preframe
        Run this script before each frame.

    Post-Frame Script:
        #id: postframe
        Run this script after each frame.

    Post-Render Script:
        #id: postrender
        Run this script after all rendering.

    Download Library:
        #id: downloadlibrary
        Downloads the core library for ZibraVDB. You need to press this button when using ZibraVDB for the first time.

   
@examples

    TIP:
        When viewing in Houdini's Help Browser, please copy the example file's URL to a regular browser to proceed with the download.

    - [Example File|https://github.com/sideeffects/SideFXLabsExamples/blob/main/examples/zibravdb/zibravdb.0.2.hip]


@related

    - [Node:out/labs--zibravdb_compress-0.2]
    - [Node:sop/labs--zibravdb_decompress-0.2]
    - [Node:sop/labs--zibravdb_filecache-0.2]