#type:     node
#context:  sop
#internal: labs::zibravdb_filecache::0.2
#icon:     /labs_icons/zibravdb.svg
#since:    20.5

= Labs ZibraVDB File Cache (Alpha) =

"""Handles the compression, caching, loading, and decompression of a VDB sequence to or from a single `.zibravdb` file."""


As a part of the [ZibraVDB for Houdini|https://effects.zibra.ai/zibravdbhoudini] plugin, this node combines the functionalities of the [Labs ZibraVDB Compress (Alpha) SOP|Node:sop/labs--rop_zibravdb_compress-0.2] and the [Labs ZibraVDB Decompress (Alpha) SOP|Node:sop/labs--zibravdb_decompress-0.2]. Similar to the [File Cache SOP|Node:sop/filecache], this node operates in two modes. In the caching mode, it caches a VDB sequence to disk as a single, highly compressed `.zibravdb` file. In the loading mode, it loads a single, highly compressed `.zibravdb` file from disk and decompresses it to a VDB sequence. It supports both animated VDB sequences and static VDB geometries.

The compression often achieves up to 97–99% reduction in VDB file size with minimal quality loss. The compression rate is adjustable for each VDB field, providing independent control over the quality and memory footprint of density, temperature, flame, and other standard or custom fields. Up to 8 float fields can be compressed simultaneously.

TIP:
    You may also compress SDF VDBs indirectly. Convert SDF VDBs to Fog VDBs before compression and back to SDF VDBs after decompression using the [Convert VDB SOP|Node:/sop/convertvdb].

NOTE:
    Vector VDBs currently cannot be compressed. This feature will be supported in the future. In the meantime, you can split vector VDBs to float VDBs using the [VDB Vector Split SOP|Node:/sop/vdbvectorsplit] before compression. After decompression, merge the float VDBs back to vector VDBs using [VDB Vector from Scalar|Node:/sop/vdbvectormerge]. Please note that compressing vectors is not exactly the same as compressing vector components independently, so this current workaround may yield unexpected results.

:platform:Windows
    ZibraVDB for Houdini is currently only supported on Windows.


:include /nodes/out/labs--zibravdb_compress-0.2#gettingready:


:include /nodes/out/labs--zibravdb_compress-0.2#aboutzibravdb:


:include /nodes/out/labs--zibravdb_compress-0.2#feedback:


@parameters

    Load from Disk:
        #id: loadfromdisk
        When this is on, the node reads its output from the compressed `.zibravdb` file, rather than output its input. When you click __Save to Disk__ or __Save to Disk in Background__ (on the Caching tab) to compress VDB sequence to `.zibravdb` file, the node automatically turns this checkbox on.

    :include /nodes/sop/labs--zibravdb_decompress-0.2#refresh:
    
    File:
        #id: file
        Path to the `.zibravdb` file VDB sequence will be compessed to. The node automatically creates missing directories in the path.

    == Caching ==

    ~~~ Cache ~~~

    :include /nodes/sop/labs--rop_zibravdb_compress-0.2#execute:
    
    :include /nodes/sop/labs--rop_zibravdb_compress-0.2#executebackground:
    
    ~~~ Sequence ~~~

    :include /nodes/sop/labs--rop_zibravdb_compress-0.2#trange:

    :include /nodes/sop/labs--rop_zibravdb_compress-0.2#f:
 
    == Save Filters ==

    Delete Attributes:
        #id: deleteattributes
        A space separated list of attributes to delete from the VDB before compressing it. The names will match at primitive and detail level.
    
    Delete Groups:
        #id: deletegroups
        A space separated list of groups to delete from the VDB before compressing it.
    
    Number of Casts:
        #id: numcasts
        If you know you don’t need full precision for certain attributes in the input, this multi-parm lets you convert the attributes to lower-precision types before saving the geometry. Set the number or click the plus or minus buttons to set the number of conversions to do.
    
    Class:
        #id: class#
        In a “cast” multiparm instance, the level (vertex, point, primitive, or detail) of the attribute(s) you want to convert to lower precision to save space.
    
    Attributes:
        #id: attribs#
        In a “cast” multiparm instance, a space-separated list of attributes at the given level (set by the Class parameter above) you want to convert to lower precision to save space.
    
    Precision:
        #id: precision#
        In a “cast” multiparm instance, the precision to convert the matching attributes down to, to save space.
    
    == Compression Settings ==

    :include /nodes/sop/labs--rop_zibravdb_compress-0.2#quality:

    :include /nodes/sop/labs--rop_zibravdb_compress-0.2#useperchsettings:
    
    :include /nodes/sop/labs--rop_zibravdb_compress-0.2#perch_settings:

    :include /nodes/sop/labs--rop_zibravdb_compress-0.2#perchname#:

    :include /nodes/sop/labs--rop_zibravdb_compress-0.2#perchquality#:

    == Advanced ==

    ~~~ Save ~~~

    Render with Take:
        #id: take
        Uses the settings in a particular take while rendering. Choose Current to use the current take when rendering.

    ~~~ Scripts ~~~

    Pre-Render Script:
        #id: prerender
        Run this script before any rendering.

    Pre-Frame Script:
        #id: preframe
        Run this script before each frame.

    Post-Frame Script:
        #id: postframe
        Run this script after each frame.

    Post-Render Script:
        #id: postrender
        Run this script after all rendering.

    :include /nodes/sop/labs--rop_zibravdb_compress-0.2#downloadlibrary:


@examples

    TIP:
        When viewing in Houdini's Help Browser, please copy the example file's URL to a regular browser to proceed with the download.

    - [Example File|https://github.com/sideeffects/SideFXLabsExamples/blob/main/examples/zibravdb/zibravdb.0.2.hip]


@related

    - [Node:out/labs--zibravdb_compress-0.2]
    - [Node:sop/labs--rop_zibravdb_compress-0.2]
    - [Node:sop/labs--zibravdb_decompress-0.2]